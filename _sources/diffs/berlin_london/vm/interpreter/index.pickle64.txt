gASVte8AAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UKGgAjAZ0YXJnZXSUk5QpgZR9lChoBWgGaAddlIwKYXR0cmlidXRlc5R9lCiMA2lkc5RdlIwlbW9kdWxlLWV0aGVyZXVtLmJlcmxpbi52bS5pbnRlcnByZXRlcpRhjAdjbGFzc2VzlF2UjAVuYW1lc5RdlIwIZHVwbmFtZXOUXZSMCGJhY2tyZWZzlF2UjAVpc21vZJSIdYwHdGFnbmFtZZRoCYwGc291cmNllIxmL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9iZXJsaW4vdm0vaW50ZXJwcmV0ZXIvaW5kZXgucnN0lIwEbGluZZRLAYwGcGFyZW50lGgDjAlfZG9jdW1lbnSUaAN1YowPc3BoaW54LmFkZG5vZGVzlIwFaW5kZXiUk5QpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMB2VudHJpZXOUXZQojARwYWlylIwmbW9kdWxlOyBldGhlcmV1bS5iZXJsaW4udm0uaW50ZXJwcmV0ZXKUaBJoBk50lGF1aBxoI2gdaB5oH0sCaCBoA2ghaAN1YmgAjAdzZWN0aW9ulJOUKYGUfZQoaAVoBmgHXZQoaACMBXRpdGxllJOUKYGUfZQoaAWMKkV0aGVyZXVtIFZpcnR1YWwgTWFjaGluZSAoRVZNKSBJbnRlcnByZXRlcpRoB12UaACMBFRleHSUk5SMKkV0aGVyZXVtIFZpcnR1YWwgTWFjaGluZSAoRVZNKSBJbnRlcnByZXRlcpSFlIGUfZQoaAVoBmggaDpoIWgDaB2MXC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaS8gPT4gZG9jL2RpZmZzlGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaDhoHWgeaB9LBGggaDVoIWgDdWJoAIwFdG9waWOUk5QpgZR9lChoBWgGaAddlChoOSmBlH2UKGgFjBFUYWJsZSBvZiBDb250ZW50c5RoB12UaD+MEVRhYmxlIG9mIENvbnRlbnRzlIWUgZR9lChoBWgGaCBoUGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoOGgdaB5oH0sIaCBoTXViaACMC2J1bGxldF9saXN0lJOUKYGUfZQoaAVoBmgHXZQoaACMCWxpc3RfaXRlbZSTlCmBlH2UKGgFaAZoB12UaACMCXBhcmFncmFwaJSTlCmBlH2UKGgFaAZoB12UaACMCXJlZmVyZW5jZZSTlCmBlH2UKGgFaAZoB12UaD+MDEludHJvZHVjdGlvbpSFlIGUfZQoaAVoBmggaG9oIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZSMA2lkMZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjAxpbnRyb2R1Y3Rpb26UdWgcaG1oHU5oH05oIGhqdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBoZXViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoY2gdTmgfTmggaGB1YmhkKYGUfZQoaAVoBmgHXZQoaGkpgZR9lChoBWgGaAddlGhuKYGUfZQoaAVoBmgHXZRoP4wPTW9kdWxlIENvbnRlbnRzlIWUgZR9lChoBWgGaCBokWghaANoHWhEaB9LAHViYWgOfZQoaBBdlIwDaWQylGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMD21vZHVsZS1jb250ZW50c5R1aBxobWgdTmgfTmggaI51YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHU5oH05oIGiLdWJoXymBlH2UKGgFaAZoB12UKGhkKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFaAZoB12UaG4pgZR9lChoBWgGaAddlGg/jAdDbGFzc2VzlIWUgZR9lChoBWgGaCBosGghaANoHWhEaB9LAHViYWgOfZQoaBBdlIwDaWQzlGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMB2NsYXNzZXOUdWgcaG1oHU5oH05oIGitdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBoqnViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoY2gdTmgfTmggaKd1YmhkKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFaAZoB12UaG4pgZR9lChoBWgGaAddlGg/jAlGdW5jdGlvbnOUhZSBlH2UKGgFaAZoIGjSaCFoA2gdaERoH0sAdWJhaA59lChoEF2UjANpZDSUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwJZnVuY3Rpb25zlHVoHGhtaB1OaB9OaCBoz3ViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdTmgfTmggaMx1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGNoHU5oH05oIGindWJoZCmBlH2UKGgFaAZoB12UaGkpgZR9lChoBWgGaAddlGhuKYGUfZQoaAVoBmgHXZRoP4wKQXR0cmlidXRlc5SFlIGUfZQoaAVoBmggaPRoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZSMA2lkNZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjAphdHRyaWJ1dGVzlHVoHGhtaB1OaB9OaCBo8XViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdTmgfTmggaO51YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGNoHU5oH05oIGindWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGheaB1OaB9OaCBoi3ViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoY2gdTmgfTmggaGB1YmhkKYGUfZQoaAVoBmgHXZQoaGkpgZR9lChoBWgGaAddlGhuKYGUfZQoaAVoBmgHXZRoP4wOTW9kdWxlIERldGFpbHOUhZSBlH2UKGgFaAZoIGoiAQAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UjANpZDaUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwObW9kdWxlLWRldGFpbHOUdWgcaG1oHU5oH05oIGofAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBqHAEAAHViaF8pgZR9lChoBWgGaAddlChoZCmBlH2UKGgFaAZoB12UaGkpgZR9lChoBWgGaAddlGhuKYGUfZQoaAVoBmgHXZRoP4wRU1RBQ0tfREVQVEhfTElNSVSUhZSBlH2UKGgFaAZoIGpBAQAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UjANpZDeUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwRc3RhY2stZGVwdGgtbGltaXSUdWgcaG1oHU5oH05oIGo+AQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBqOwEAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoY2gdTmgfTmggajgBAAB1YmhkKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFaAZoB12UaG4pgZR9lChoBWgGaAddlGg/jA1NQVhfQ09ERV9TSVpFlIWUgZR9lChoBWgGaCBqYwEAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlIwDaWQ4lGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMDW1heC1jb2RlLXNpemWUdWgcaG1oHU5oH05oIGpgAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBqXQEAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoY2gdTmgfTmggajgBAAB1YmhkKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFaAZoB12UaG4pgZR9lChoBWgGaAddlGg/jBFNZXNzYWdlQ2FsbE91dHB1dJSFlIGUfZQoaAVoBmggaoUBAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZSMA2lkOZRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBFtZXNzYWdlY2FsbG91dHB1dJR1aBxobWgdTmgfTmggaoIBAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHU5oH05oIGp/AQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhjaB1OaB9OaCBqOAEAAHViaGQpgZR9lChoBWgGaAddlGhpKYGUfZQoaAVoBmgHXZRobimBlH2UKGgFaAZoB12UaD+MFHByb2Nlc3NfbWVzc2FnZV9jYWxslIWUgZR9lChoBWgGaCBqpwEAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlIwEaWQxMJRhaBNdlGgVXZRoF12UaBldlIwFcmVmaWSUjBRwcm9jZXNzLW1lc3NhZ2UtY2FsbJR1aBxobWgdTmgfTmggaqQBAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHU5oH05oIGqhAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhjaB1OaB9OaCBqOAEAAHViaGQpgZR9lChoBWgGaAddlGhpKYGUfZQoaAVoBmgHXZRobimBlH2UKGgFaAZoB12UaD+MFnByb2Nlc3NfY3JlYXRlX21lc3NhZ2WUhZSBlH2UKGgFaAZoIGrJAQAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UjARpZDExlGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMFnByb2Nlc3MtY3JlYXRlLW1lc3NhZ2WUdWgcaG1oHU5oH05oIGrGAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBqwwEAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoY2gdTmgfTmggajgBAAB1YmhkKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFaAZoB12UaG4pgZR9lChoBWgGaAddlGg/jA9wcm9jZXNzX21lc3NhZ2WUhZSBlH2UKGgFaAZoIGrrAQAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UjARpZDEylGFoE12UaBVdlGgXXZRoGV2UjAVyZWZpZJSMD3Byb2Nlc3MtbWVzc2FnZZR1aBxobWgdTmgfTmggaugBAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHU5oH05oIGrlAQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhjaB1OaB9OaCBqOAEAAHViaGQpgZR9lChoBWgGaAddlGhpKYGUfZQoaAVoBmgHXZRobimBlH2UKGgFaAZoB12UaD+MDGV4ZWN1dGVfY29kZZSFlIGUfZQoaAVoBmggag0CAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZSMBGlkMTOUYWgTXZRoFV2UaBddlGgZXZSMBXJlZmlklIwMZXhlY3V0ZS1jb2RllHVoHGhtaB1OaB9OaCBqCgIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdTmgfTmggagcCAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGNoHU5oH05oIGo4AQAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGheaB1OaB9OaCBqHAEAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoY2gdTmgfTmggaGB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaF5oHU5oH05oIGhNdWJlaA59lChoEF2UjBF0YWJsZS1vZi1jb250ZW50c5RhaBNdlCiMCGNvbnRlbnRzlIwFbG9jYWyUZWgVXZSMEXRhYmxlIG9mIGNvbnRlbnRzlGFoF12UaBldlHVoHGhLaB1oHmgfSwhoIGg1aCFoA3ViaDQpgZR9lChoBWgGaAddlChoOSmBlH2UKGgFjAxJbnRyb2R1Y3Rpb26UaAddlGg/jAxJbnRyb2R1Y3Rpb26UhZSBlH2UKGgFaAZoIGpIAgAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGg4aB1oHmgfSwtoIGpFAgAAdWJoaSmBlH2UKGgFjDVBIHN0cmFpZ2h0Zm9yd2FyZCBpbnRlcnByZXRlciB0aGF0IGV4ZWN1dGVzIEVWTSBjb2RlLpRoB12UaD+MNUEgc3RyYWlnaHRmb3J3YXJkIGludGVycHJldGVyIHRoYXQgZXhlY3V0ZXMgRVZNIGNvZGUulIWUgZR9lChoBWgGaCBqVgIAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdaB5oH0sNaCBqRQIAAHViaACMB2NvbW1lbnSUk5QpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZSMCHByZXNlcnZllHVoHGpkAgAAaB1OaB9OaCBqRQIAAHViZWgOfZQoaBBdlGh+YWgTXZRoFV2UjAxpbnRyb2R1Y3Rpb26UYWgXXZRoGV2UdWgcaDNoHWgeaB9LC2ggaDVoIWgDdWJoNCmBlH2UKGgFaAZoB12UKGg5KYGUfZQoaAWMD01vZHVsZSBDb250ZW50c5RoB12UaD+MD01vZHVsZSBDb250ZW50c5SFlIGUfZQoaAVoBmggansCAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaDhoHWgeaB9LE2ggangCAAB1Ymg0KYGUfZQoaAVoBmgHXZQoaDkpgZR9lChoBYwHQ2xhc3Nlc5RoB12UaD+MB0NsYXNzZXOUhZSBlH2UKGgFaAZoIGqMAgAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGg4aB1oHmgfSxZoIGqJAgAAdWJoIowQdGFidWxhcl9jb2xfc3BlY5STlCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwEc3BlY5SMEFxYezF9ezJ9XFh7MX17Mn2UdWgcapoCAABoHYx3L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9iZXJsaW4vdm0vaW50ZXJwcmV0ZXIvaW5kZXgucnN0OjI5OjxhdXRvc3VtbWFyeT6UaB9OaCBqiQIAAHVijBZzcGhpbnguZXh0LmF1dG9zdW1tYXJ5lIwRYXV0b3N1bW1hcnlfdGFibGWUk5QpgZR9lChoBYw6CgoKCk1lc3NhZ2VDYWxsT3V0cHV0CgpPdXRwdXQgb2YgYSBwYXJ0aWN1bGFyIG1lc3NhZ2UgY2FsbJRoB12UaACMBXRhYmxllJOUKYGUfZQoaAVoBmgHXZRoAIwGdGdyb3VwlJOUKYGUfZQoaAVoBmgHXZQoaACMB2NvbHNwZWOUk5QpgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCGNvbHdpZHRolEsKdWgcarkCAABoHU5oH05oIGq2AgAAdWJqugIAACmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIY29sd2lkdGiUS1p1aBxquQIAAGgdTmgfTmggarYCAAB1YmgAjAV0Ym9keZSTlCmBlH2UKGgFaAZoB12UaACMA3Jvd5STlCmBlH2UKGgFaAZoB12UKGgAjAVlbnRyeZSTlCmBlH2UKGgFaAZoB12UaGkpgZR9lChoBYxMOm9iajpgTWVzc2FnZUNhbGxPdXRwdXQgPGV0aGVyZXVtLmJlcmxpbi52bS5pbnRlcnByZXRlci5NZXNzYWdlQ2FsbE91dHB1dD5gXJRoB12UKGhuKYGUfZQoaAVoBmgHXZRoAIwHbGl0ZXJhbJSTlCmBlH2UKGgFjEs6b2JqOmBNZXNzYWdlQ2FsbE91dHB1dCA8ZXRoZXJldW0uYmVybGluLnZtLmludGVycHJldGVyLk1lc3NhZ2VDYWxsT3V0cHV0PmCUaAddlGg/jBFNZXNzYWdlQ2FsbE91dHB1dJSFlIGUfZQoaAVoBmggaucCAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UKIwEeHJlZpSMAnB5lIwGcHktb2JqlGVoFV2UaBddlGgZXZR1aBxq5QIAAGgdTmgfTmggauICAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMMGV0aGVyZXVtLmJlcmxpbi52bS5pbnRlcnByZXRlci5NZXNzYWdlQ2FsbE91dHB1dJSMCHJlZnRpdGxllIwwZXRoZXJldW0uYmVybGluLnZtLmludGVycHJldGVyLk1lc3NhZ2VDYWxsT3V0cHV0lHVoHGhtaB1OaB9OaCBq3gIAAHViaD9oBoWUgZR9lChoBWgGaCBq3gIAAGghaANoHWhEaB9LAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdjHcvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2Jlcmxpbi92bS9pbnRlcnByZXRlci9pbmRleC5yc3Q6Mjk6PGF1dG9zdW1tYXJ5PpRoH0sBaCBq2wIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxq2QIAAGgdTmgfTmggatYCAAB1YmraAgAAKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFjCNPdXRwdXQgb2YgYSBwYXJ0aWN1bGFyIG1lc3NhZ2UgY2FsbJRoB12UaD+MI091dHB1dCBvZiBhIHBhcnRpY3VsYXIgbWVzc2FnZSBjYWxslIWUgZR9lChoBWgGaCBqFgMAAGghaANoHWhEaB9LAHViYWgOfZQoaBBd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c19jcmVhdGVfbWVzc2FnZSA8ZXRoZXJldW0uYmVybGluLnZtLmludGVycHJldGVyLnByb2Nlc3NfY3JlYXRlX21lc3NhZ2U+YJRoB12UaG4pgZR9lChoBWgGaAddlGrmAgAAKYGUfZQoaAVq/QMAAGgHXZRoP4wWcHJvY2Vzc19jcmVhdGVfbWVzc2FnZZSFlIGUfZQoaAVoBmggagIEAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UKGryAgAAjAJweZSMBnB5LW9iapRlaBVdlGgXXZRoGV2UdWgcauUCAABoHU5oH05oIGr/AwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwIaW50ZXJuYWyUiIwFcmVmaWSUjDVldGhlcmV1bS5iZXJsaW4udm0uaW50ZXJwcmV0ZXIucHJvY2Vzc19jcmVhdGVfbWVzc2FnZZSMCHJlZnRpdGxllIw1ZXRoZXJldW0uYmVybGluLnZtLmludGVycHJldGVyLnByb2Nlc3NfY3JlYXRlX21lc3NhZ2WUdWgcaG1oHU5oH05oIGr7AwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB2Mdy9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vYmVybGluL3ZtL2ludGVycHJldGVyL2luZGV4LnJzdDo0Mjo8YXV0b3N1bW1hcnk+lGgfSwFoIGr4AwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGrZAgAAaB1OaB9OaCBq9QMAAHViatoCAAApgZR9lChoBWgGaAddlGhpKYGUfZQoaAWMK0V4ZWN1dGVzIGEgY2FsbCB0byBjcmVhdGUgYSBzbWFydCBjb250cmFjdC6UaAddlGg/jCtFeGVjdXRlcyBhIGNhbGwgdG8gY3JlYXRlIGEgc21hcnQgY29udHJhY3QulIWUgZR9lChoBWgGaCBqLAQAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdjHcvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9h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ZUNhbGxPdXRwdXQoCiAgICAgICAgICAgICAgICBVaW50KDApLCBVMjU2KDApLCB0dXBsZSgpLCBzZXQoKSwgc2V0KCksIEFkZHJlc3NDb2xsaXNpb24oKQogICAgICAgICAgICApCiAgICAgICAgZWxzZToKICAgICAgICAgICAgZXZtID0gcHJvY2Vzc19jcmVhdGVfbWVzc2FnZShtZXNzYWdlLCBlbnYpCiAgICBlbHNlOgogICAgICAgIGV2bSA9IHByb2Nlc3NfbWVzc2FnZShtZXNzYWdlLCBlbnYpCiAgICAgICAgaWYgYWNjb3VudF9leGlzdHNfYW5kX2lzX2VtcHR5KGVudi5zdGF0ZSwgQWRkcmVzcyhtZXNzYWdlLnRhcmdldCkpOgogICAgICAgICAgICBldm0udG91Y2hlZF9hY2NvdW50cy5hZGQoQWRkcmVzcyhtZXNzYWdlLnRhcmdldCkpCgogICAgaWYgZXZtLmVycm9yOgogICAgICAgIGxvZ3M6IFR1cGxlW0xvZywgLi4uXSA9ICgpCiAgICAgICAgYWNjb3VudHNfdG9fZGVsZXRlID0gc2V0KCkKICAgICAgICB0b3VjaGVkX2FjY291bnRzID0gc2V0KCkKICAgICAgICByZWZ1bmRfY291bnRlciA9IFUyNTYoMCkKICAgIGVsc2U6CiAgICAgICAgbG9ncyA9IGV2bS5sb2dzCiAgICAgICAgYWNjb3VudHNfdG9fZGVsZXRlID0gZXZtLmFjY291bnRzX3RvX2RlbGV0ZQogICAgICAgIHRvdWNoZWRfYWNjb3VudHMgPSBldm0udG91Y2hlZF9hY2NvdW50cwogICAgICAgIHJlZnVuZF9jb3VudGVyID0gVTI1Nihldm0ucmVmdW5kX2NvdW50ZXIpCgogICAgdHhfZW5kID0gVHJhbnNhY3Rpb25FbmQobWVzc2FnZS5nYXMgLSBldm0uZ2FzX2xlZnQsIGV2bS5vdXRwdXQsIGV2bS5lcnJvcikKICAgIGV2bV90cmFjZShldm0sIHR4X2VuZCkKCiAgICByZXR1cm4gTWVzc2FnZUNhbGxPdXRwdXQoCiAgICAgICAgZ2FzX2xlZnQ9ZXZtLmdhc19sZWZ0LAogICAgICAgIHJlZnVuZF9jb3VudGVyPXJlZnVuZF9jb3VudGVyLAogICAgICAgIGxvZ3M9bG9ncywKICAgICAgICBhY2NvdW50c190b19kZWxldGU9YWNjb3VudHNfdG9fZGVsZXRlLAogICAgICAgIHRvdWNoZWRfYWNjb3VudHM9dG91Y2hlZF9hY2NvdW50cywKICAgICAgICBlcnJvcj1ldm0uZXJyb3IsCiAgICApCpRoB12UaD9YNgUAAGRlZiBwcm9jZXNzX21lc3NhZ2VfY2FsbCgKICAgIG1lc3NhZ2U6IE1lc3NhZ2UsIGVudjogRW52aXJvbm1lbnQKKSAtPiBNZXNzYWdlQ2FsbE91dHB1dDoKICAgIGlmIG1lc3NhZ2UudGFyZ2V0ID09IEJ5dGVzMChiIiIpOgogICAgICAgIGlzX2NvbGxpc2lvbiA9IGFjY291bnRfaGFzX2NvZGVfb3Jfbm9uY2UoCiAgICAgICAgICAgIGVudi5zdGF0ZSwgbWVzc2FnZS5jdXJyZW50X3RhcmdldAogICAgICAgICkKICAgICAgICBpZiBpc19jb2xsaXNpb246CiAgICAgICAgICAgIHJldHVybiBNZXNzYWdlQ2FsbE91dHB1dCgKICAgICAgICAgICAgICAgIFVpbnQoMCksIFUyNTYoMCksIHR1cGxlKCksIHNldCgpLCBzZXQoKSwgQWRkcmVzc0NvbGxpc2lvbigpCiAgICAgICAgICAgICkKICAgICAgICBlbHNlOgogICAgICAgICAgICBldm0gPSBwcm9jZXNzX2NyZWF0ZV9tZXNzYWdlKG1lc3NhZ2UsIGVudikKICAgIGVsc2U6CiAgICAgICAgZXZtID0gcHJvY2Vzc19tZXNzYWdlKG1lc3NhZ2UsIGVudikKICAgICAgICBpZiBhY2NvdW50X2V4aXN0c19hbmRfaXNfZW1wdHkoZW52LnN0YXRlLCBBZGRyZXNzKG1lc3NhZ2UudGFyZ2V0KSk6CiAgICAgICAgICAgIGV2bS50b3VjaGVkX2FjY291bnRzLmFkZChBZGRyZXNzKG1lc3NhZ2UudGFyZ2V0KSkKCiAgICBpZiBldm0uZXJyb3I6CiAgICAgICAgbG9nczogVHVwbGVbTG9nLCAuLi5dID0gKCkKICAgICAgICBhY2NvdW50c190b19kZWxldGUgPSBzZXQoKQogICAgICAgIHRvdWNoZWRfYWNjb3VudHMgPSBzZXQoKQogICAgICAgIHJlZnVuZF9jb3VudGVyID0gVTI1NigwKQogICAgZWxzZToKICAgICAgICBsb2dzID0gZXZtLmxvZ3MKICAgICAgICBhY2NvdW50c190b19kZWxldGUgPSBldm0uYWNjb3VudHNfdG9fZGVsZXRlCiAgICAgICAgdG91Y2hlZF9hY2NvdW50cyA9IGV2bS50b3VjaGVkX2FjY291bnRzCiAgICAgICAgcmVmdW5kX2NvdW50ZXIgPSBVMjU2KGV2bS5yZWZ1bmRfY291bnRlcikKCiAgICB0eF9lbmQgPSBUcmFuc2FjdGlvbkVuZChtZXNzYWdlLmdhcyAtIGV2bS5nYXNfbGVmdCwgZXZtLm91dHB1dCwgZXZtLmVycm9yKQogICAgZXZtX3RyYWNlKGV2bSwgdHhfZW5kKQoKICAgIHJldHVybiBNZXNzYWdlQ2FsbE91dHB1dCgKICAgICAgICBnYXNfbGVmdD1ldm0uZ2FzX2xlZnQsCiAgICAgICAgcmVmdW5kX2NvdW50ZXI9cmVmdW5kX2NvdW50ZXIsCiAgICAgICAgbG9ncz1sb2dzLAogICAgICAgIGFjY291bnRzX3RvX2RlbGV0ZT1hY2NvdW50c190b19kZWxldGUsCiAgICAgICAgdG91Y2hlZF9hY2NvdW50cz10b3VjaGVkX2FjY291bnRzLAogICAgICAgIGVycm9yPWV2bS5lcnJvciwKICAgICkKlIWUgZR9lChoBWgGaCBq0QwAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMBnNvdXJjZZSMVy9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3Mvc3JjL2V0aGVyZXVtL2Jlcmxpbi92bS9pbnRlcnByZXRlci5weZSMCXhtbDpzcGFjZZRqcAIAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGqvBgAASwFzjAdsaW5lbm9zlIl1aBxqlwYAAGgdaB5oH0ukaCBq+goAAHViZWgOfZQoaBBdlGq2AQAAYWgTXZRoFV2UjBRwcm9jZXNzX21l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bnQKICAgICMgICBgQ1JFQVRFYCBvciBgQ1JFQVRFMmAgY2FsbC4KICAgICMgKiBUaGUgZmlyc3QgYENSRUFURWAgaGFwcGVuZWQgYmVmb3JlIFNwdXJpb3VzIERyYWdvbiBhbmQgbGVmdCBlbXB0eQogICAgIyAgIGNvZGUuCiAgICBkZXN0cm95X3N0b3JhZ2UoZW52LnN0YXRlLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0KQoKICAgICMgSW4gdGhlIHByZXZpb3VzbHkgbWVudGlvbmVkIGVkZ2UgY2FzZSB0aGUgcHJlZXhpc3Rpbmcgc3RvcmFnZSBpcyBpZ25vcmVkCiAgICAjIGZvciBnYXMgcmVmdW5kIHB1cnBvc2VzLiBJbiBvcmRlciB0byBkbyB0aGlzIHdlIG11c3QgdHJhY2sgY3JlYXRlZAogICAgIyBhY2NvdW50cy4KICAgIG1hcmtfYWNjb3VudF9jcmVhdGVkKGVudi5zdGF0ZSwgbWVzc2FnZS5jdXJyZW50X3RhcmdldCkKCiAgICBpbmNyZW1lbnRfbm9uY2UoZW52LnN0YXRlLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0KQogICAgZXZtID0gcHJvY2Vzc19tZXNzYWdlKG1lc3NhZ2UsIGVudikKICAgIGlmIG5vdCBldm0uZXJyb3I6CiAgICAgICAgY29udHJhY3RfY29kZSA9IGV2bS5vdXRwdXQKICAgICAgICBjb250cmFjdF9jb2RlX2dhcyA9IGxlbihjb250cmFjdF9jb2RlKSAqIEdBU19DT0RFX0RFUE9TSVQKICAgICAgICB0cnk6CiAgICAgICAgICAgIGNoYXJnZV9nYXMoZXZtLCBjb250cmFjdF9jb2RlX2dhcykKICAgICAgICAgICAgZW5zdXJlKGxlbihjb250cmFjdF9jb2RlKSA8PSBNQVhfQ09ERV9TSVpFLCBPdXRPZkdhc0Vycm9yKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb25hbEhhbHQgYXMgZXJyb3I6CiAgICAgICAgICAgIHJvbGxiYWNrX3RyYW5zYWN0aW9uKGVudi5zdGF0ZSkKICAgICAgICAgICAgZXZtLmdhc19sZWZ0ID0gVWludCgwKQogICAgICAgICAgICBldm0ub3V0cHV0ID0gYiIiCiAgICAgICAgICAgIGV2bS5lcnJvciA9IGVycm9yCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2V0X2NvZGUoZW52LnN0YXRlLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0LCBjb250cmFjdF9jb2RlKQogICAgICAgICAgICBjb21taXRfdHJhbnNhY3Rpb24oZW52LnN0YXRlKQogICAgZWxzZToKICAgICAgICByb2xsYmFja190cmFuc2FjdGlvbihlbnYuc3RhdGUpCiAgICByZXR1cm4gZXZtCpRoB12UKGg/WCEEAABkZWYgcHJvY2Vzc19jcmVhdGVfbWVzc2FnZShtZXNzYWdlOiBNZXNzYWdlLCBlbnY6IEVudmlyb25tZW50KSAtPiBFdm06CiAgICAjIHRha2Ugc25hcHNob3Qgb2Ygc3RhdGUgYmVmb3JlIHByb2Nlc3NpbmcgdGhlIG1lc3NhZ2UKICAgIGJlZ2luX3RyYW5zYWN0aW9uKGVudi5zdGF0ZSkKCiAgICAjIElmIHRoZSBhZGRyZXNzIHdoZXJlIHRoZSBhY2NvdW50IGlzIGJlaW5nIGNyZWF0ZWQgaGFzIHN0b3JhZ2UsIGl0IGlzCiAgICAjIGRlc3Ryb3llZC4gVGhpcyBjYW4gb25seSBoYXBwZW4gaW4gdGhlIGZvbGxvd2luZyBoaWdobHkgdW5saWtlbHkKICAgICMgY2lyY3Vtc3RhbmNlczoKICAgICMgKiBUaGUgYWRkcmVzcyBjcmVhdGVkIGJ5IGEgYENSRUFURWAgY2FsbCBjb2xsaWRlcyB3aXRoIGEgc3Vic2VxdWVudAogICAgIyAgIGBDUkVBVEVgIG9yIGBDUkVBVEUyYCBjYWxsLgogICAgIyAqIFRoZSBmaXJzdCBgQ1JFQVRFYCBoYXBwZW5lZCBiZWZvcmUgU3B1cmlvdXMgRHJhZ29uIGFuZCBsZWZ0IGVtcHR5CiAgICAjICAgY29kZS4KICAgIGRlc3Ryb3lfc3RvcmFnZShlbnYuc3RhdGUsIG1lc3NhZ2UuY3VycmVudF90YXJnZXQpCgogICAgIyBJbiB0aGUgcHJldmlvdXNseSBtZW50aW9uZWQgZWRnZSBjYXNlIHRoZSBwcmVleGlzdGluZyBzdG9yYWdlIGlzIGlnbm9yZWQKICAgICMgZm9yIGdhcyByZWZ1bmQgcHVycG9zZXMuIEluIG9yZGVyIHRvIGRvIHRoaXMgd2UgbXVzdCB0cmFjayBjcmVhdGVkCiAgICAjIGFjY291bnRzLgogICAgbWFya19hY2NvdW50X2NyZWF0ZWQoZW52LnN0YXRlLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0KQoKICAgIGluY3JlbWVudF9ub25jZShlbnYuc3RhdGUsIG1lc3NhZ2UuY3VycmVudF90YXJnZXQpCiAgICBldm0gPSBwcm9jZXNzX21lc3NhZ2UobWVzc2FnZSwgZW52KQogICAgaWYgbm90IGV2bS5lcnJvcjoKICAgICAgICBjb250cmFjdF9jb2RlID0gZXZtLm91dHB1dAogICAgICAgIGNvbnRyYWN0X2NvZGVfZ2FzID0gbGVuKGNvbnRyYWN0X2NvZGUpICogR0FTX0NPREVfREVQT1NJVAogICAgICAgIHRyeToKICAgICAgICAgICAglIWUgZR9lChoBWgGaCBqjw4AAGghaANoHWhEaB9LAHVianAJAAApgZR9lChoBWgGaAddlGg/jG9pZiBsZW4oY29udHJhY3RfY29kZSkgPiAwOgogICAgICAgICAgICAgICAgZW5zdXJlKGNvbnRyYWN0X2NvZGVbMF0gIT0gMHhFRiwgSW52YWxpZENvbnRyYWN0UHJlZml4KQogICAgICAgICAgICCUhZSBlH2UKGgFaAZoIGqXDgAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlIwMY2hhbmdlLWFkZGVklGFoFV2UaBddlGgZXZR1aBxqbwkAAGggao8OAABoIWgDaB1oRGgfSwB1Ymg/WN0BAABjaGFyZ2VfZ2FzKGV2bSwgY29udHJhY3RfY29kZV9nYXMpCiAgICAgICAgICAgIGVuc3VyZShsZW4oY29udHJhY3RfY29kZSkgPD0gTUFYX0NPREVfU0laRSwgT3V0T2ZHYXNFcnJvcikKICAgICAgICBleGNlcHQgRXhjZXB0aW9uYWxIYWx0IGFzIGVycm9yOgogICAgICAgICAgICByb2xsYmFja190cmFuc2FjdGlvbihlbnYuc3RhdGUpCiAgICAgICAgICAgIGV2bS5nYXNfbGVmdCA9IFVp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F12UaBldlIwGZG9tYWlulGowDwAAjAdvYmp0eXBllGpXEAAAjAhkZXNjdHlwZZRqVxAAAIwHbm9pbmRleJSJdWgcalMGAABoHU5oH05oIGq/DgAAdWJqmAYAACmBlH2UKGgFWO8CAABkZWYgcHJvY2Vzc19tZXNzYWdlKG1lc3NhZ2U6IE1lc3NhZ2UsIGVudjogRW52aXJvbm1lbnQpIC0+IEV2bToKICAgIGlmIG1lc3NhZ2UuZGVwdGggPiBTVEFDS19ERVBUSF9MSU1JVDoKICAgICAgICByYWlzZSBTdGFja0RlcHRoTGltaXRFcnJvcigiU3RhY2sgZGVwdGggbGltaXQgcmVhY2hlZCIpCgogICAgIyB0YWtlIHNuYXBzaG90IG9mIHN0YXRlIGJlZm9yZSBwcm9jZXNzaW5nIHRoZSBtZXNzYWdlCiAgICBiZWdpbl90cmFuc2FjdGlvbihlbnYuc3RhdGUpCgogICAgdG91Y2hfYWNjb3VudChlbnYuc3RhdGUsIG1lc3NhZ2UuY3VycmVudF90YXJnZXQpCgogICAgaWYgbWVzc2FnZS5zaG91bGRfdHJhbnNmZXJfdmFsdWUgYW5kIG1lc3NhZ2UudmFsdWUgIT0gMDoKICAgICAgICBtb3ZlX2V0aGVyKAogICAgICAgICAgICBlbnYuc3RhdGUsIG1lc3NhZ2UuY2FsbGVyLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0LCBtZXNzYWdlLnZhbHVlCiAgICAgICAgKQoKICAgIGV2bSA9IGV4ZWN1dGVfY29kZShtZXNzYWdlLCBlbnYpCiAgICBpZiBldm0uZXJyb3I6CiAgICAgICAgIyByZXZlcnQgc3RhdGUgdG8gdGhlIGxhc3Qgc2F2ZWQgY2hlY2twb2ludAogICAgICAgICMgc2luY2UgdGhlIG1lc3NhZ2UgY2FsbCByZXN1bHRlZCBpbiBhbiBlcnJvcgogICAgICAgIHJvbGxiYWNrX3RyYW5zYWN0aW9uKGVudi5zdGF0ZSkKICAgIGVsc2U6CiAgICAgICAgY29tbWl0X3RyYW5zYWN0aW9uKGVudi5zdGF0ZSkKICAgIHJldHVybiBldm0KlGgHXZRoP1jvAgAAZGVmIHByb2Nlc3NfbWVzc2FnZShtZXNzYWdlOiBNZXNzYWdlLCBlbnY6IEVudmlyb25tZW50KSAtPiBFdm06CiAgICBpZiBtZXNzYWdlLmRlcHRoID4gU1RBQ0tfREVQVEhfTElNSVQ6CiAgICAgICAgcmFpc2UgU3RhY2tEZXB0aExpbWl0RXJyb3IoIlN0YWNrIGRlcHRoIGxpbWl0IHJlYWNoZWQiKQoKICAgICMgdGFrZSBzbmFwc2hvdCBvZiBzdGF0ZSBiZWZvcmUgcHJvY2Vzc2luZyB0aGUgbWVzc2FnZQogICAgYmVnaW5fdHJhbnNhY3Rpb24oZW52LnN0YXRlKQoKICAgIHRvdWNoX2FjY291bnQoZW52LnN0YXRlLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0KQoKICAgIGlmIG1lc3NhZ2Uuc2hvdWxkX3RyYW5zZmVyX3ZhbHVlIGFuZCBtZXNzYWdlLnZhbHVlICE9IDA6CiAgICAgICAgbW92ZV9ldGhlcigKICAgICAgICAgICAgZW52LnN0YXRlLCBtZXNzYWdlLmNhbGxlciwgbWVzc2FnZS5jdXJyZW50X3RhcmdldCwgbWVzc2FnZS52YWx1ZQogICAgICAgICkKCiAgICBldm0gPSBleGVjdXRlX2NvZGUobWVzc2FnZSwgZW52KQogICAgaWYgZXZtLmVycm9yOgogICAgICAgICMgcmV2ZXJ0IHN0YXRlIHRvIHRoZSBsYXN0IHNhdmVkIGNoZWNrcG9pbnQKICAgICAgICAjIHNpbmNlIHRoZSBtZXNzYWdlIGNhbGwgcmVzdWx0ZWQgaW4gYW4gZXJyb3IKICAgICAgICByb2xsYmFja190cmFuc2FjdGlvbihlbnYuc3RhdGUpCiAgICBlbHNlOgogICAgICAgIGNvbW1pdF90cmFuc2FjdGlvbihlbnYuc3RhdGUpCiAgICByZXR1cm4gZXZtCpSFlIGUfZQoaAVoBmggal8QAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjFcvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9iZXJsaW4vdm0vaW50ZXJwcmV0ZXIucHmUjAl4bWw6c3BhY2WUanACAACMBWZvcmNl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dGVyPTAsCiAgICAgICAgcnVubmluZz1UcnVlLAogICAgICAgIG1lc3NhZ2U9bWVzc2FnZSwKICAgICAgICBvdXRwdXQ9YiIiLAogICAgICAgIGFjY291bnRzX3RvX2RlbGV0ZT1zZXQoKSwKICAgICAgICB0b3VjaGVkX2FjY291bnRzPXNldCgpLAogICAgICAgIHJldHVybl9kYXRhPWIiIiwKICAgICAgICBlcnJvcj1Ob25lLAogICAgICAgIGFjY2Vzc2VkX2FkZHJlc3Nlcz1tZXNzYWdlLmFjY2Vzc2VkX2FkZHJlc3NlcywKICAgICAgICBhY2Nlc3NlZF9zdG9yYWdlX2tleXM9bWVzc2FnZS5hY2Nlc3NlZF9zdG9yYWdlX2tleXMsCiAgICApCiAgICB0cnk6CgogICAgICAgIGlmIGV2bS5tZXNzYWdlLmNvZGVfYWRkcmVzcyBpbiBQUkVfQ09NUElMRURfQ09OVFJBQ1RTOgogICAgICAgICAgICBldm1fdHJhY2UoZXZtLCBQcmVjb21waWxlU3RhcnQoZXZtLm1lc3NhZ2UuY29kZV9hZGRyZXNzKSkKICAgICAgICAgICAgUFJFX0NPTVBJTEVEX0NPTlRSQUNUU1tldm0ubWVzc2FnZS5jb2RlX2FkZHJlc3NdKGV2bSkKICAgICAgICAgICAgZXZtX3RyYWNlKGV2bSwgUHJlY29tcGlsZUVuZCgpKQogICAgICAgICAgICByZXR1cm4gZXZtCgogICAgICAgIHdoaWxlIGV2bS5ydW5uaW5nIGFuZCBldm0ucGMgPCBsZW4oZXZtLmNvZGUpOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBvcCA9IE9wcyhldm0uY29kZVtldm0ucGNdKQogICAgICAgICAgICBleGNlcHQgVmFsdWVFcnJvcjoKICAgICAgICAgICAgICAgIHJhaXNlIEludmFsaWRPcGNvZGUoZXZtLmNvZGVbZXZtLnBjXSkKCiAgICAgICAgICAgIGV2bV90cmFjZShldm0sIE9wU3RhcnQob3ApKQogICAgICAgICAgICBvcF9pbXBsZW1lbnRhdGlvbltvcF0oZXZtKQogICAgICAgICAgICBldm1fdHJhY2UoZXZtLCBPcEVuZCgpKQoKICAgICAgICBldm1fdHJhY2UoZXZtLCBFdm1TdG9wKE9wcy5TVE9QKSkKCiAgICBleGNlcHQgRXhjZXB0aW9uYWxIYWx0IGFzIGVycm9yOgogICAgICAgIGV2bV90cmFjZShldm0sIE9wRXhjZXB0aW9uKGVycm9yKSkKICAgICAgICBldm0uZ2FzX2xlZnQgPSBVaW50KDApCiAgICAgICAgZXZtLm91dHB1dCA9IGIiIgogICAgICAgIGV2bS5lcnJvciA9IGVycm9yCiAgICBleGNlcHQgUmV2ZXJ0IGFzIGVycm9yOgogICAgICAgIGV2bV90cmFjZShldm0sIE9wRXhjZXB0aW9uKGVycm9yKSkKICAgICAgICBldm0uZXJyb3IgPSBlcnJvcgogICAgcmV0dXJuIGV2bQqUaAddlGg/WEcGAABkZWYgZXhlY3V0ZV9jb2RlKG1lc3NhZ2U6IE1lc3NhZ2UsIGVudjogRW52aXJvbm1lbnQpIC0+IEV2bToKICAgIGNvZGUgPSBtZXNzYWdlLmNvZGUKICAgIHZhbGlkX2p1bXBfZGVzdGluYXRpb25zID0gZ2V0X3ZhbGlkX2p1bXBfZGVzdGluYXRpb25zKGNvZGUpCgogICAgZXZtID0gRXZtKAogICAgICAgIHBjPVVpbnQoMCksCiAgICAgICAgc3RhY2s9W10sCiAgICAgICAgbWVtb3J5PWJ5dGVhcnJheSgpLAogICAgICAgIGNvZGU9Y29kZSwKICAgICAgICBnYXNfbGVmdD1tZXNzYWdlLmdhcywKICAgICAgICBlbnY9ZW52LAogICAgICAgIHZhbGlkX2p1bXBfZGVzdGluYXRpb25zPXZhbGlkX2p1bXBfZGVzdGluYXRpb25zLAogICAgICAgIGxvZ3M9KCksCiAgICAgICAgcmVmdW5kX2NvdW50ZXI9MCwKICAgICAgICBydW5uaW5nPVRydWUsCiAgICAgICAgbWVzc2FnZT1tZXNzYWdlLAogICAgICAgIG91dHB1dD1iIiIsCiAgICAgICAgYWNjb3VudHNfdG9fZGVsZXRlPXNldCgpLAogICAgICAgIHRvdWNoZWRfYWNjb3VudHM9c2V0KCksCiAgICAgICAgcmV0dXJuX2RhdGE9YiIiLAogICAgICAgIGVycm9yPU5vbmUsCiAgICAgICAgYWNjZXNzZWRfYWRkcmVzc2VzPW1lc3NhZ2UuYWNjZXNzZWRfYWRkcmVzc2VzLAogICAgICAgIGFjY2Vzc2VkX3N0b3JhZ2Vfa2V5cz1tZXNzYWdlLmFjY2Vzc2VkX3N0b3JhZ2Vfa2V5cywKICAgICkKICAgIHRyeToKCiAgICAgICAgaWYgZXZtLm1lc3NhZ2UuY29kZV9hZGRyZXNzIGluIFBSRV9DT01QSUxFRF9DT05UUkFDVFM6CiAgICAgICAgICAgIGV2bV90cmFjZShldm0sIFByZWNvbXBpbGVTdGFydChldm0ubWVzc2FnZS5jb2RlX2FkZHJlc3MpKQogICAgICAgICAgICBQUkVfQ09NUElMRURfQ09OVFJBQ1RTW2V2bS5tZXNzYWdlLmNvZGVfYWRkcmVzc10oZXZtKQogICAgICAgICAgICBldm1fdHJhY2UoZXZtLCBQcmVjb21waWxlRW5kKCkpCiAgICAgICAgICAgIHJldHVybiBldm0KCiAgICAgICAgd2hpbGUgZXZtLnJ1bm5pbmcgYW5kIGV2bS5wYyA8IGxlbihldm0uY29kZSk6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIG9wID0gT3BzKGV2bS5jb2RlW2V2bS5wY10pCiAgICAgICAgICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAgICAgICAgICAgcmFpc2UgSW52YWxpZE9wY29kZShldm0uY29kZVtldm0ucGNdKQoKICAgICAgICAgICAgZXZtX3RyYWNlKGV2bSwgT3BTdGFydChvcCkpCiAgICAgICAgICAgIG9wX2ltcGxlbWVudGF0aW9uW29wXShldm0pCiAgICAgICAgICAgIGV2bV90cmFjZShldm0sIE9wRW5kKCkpCgogICAgICAgIGV2bV90cmFjZShldm0sIEV2bVN0b3AoT3BzLlNUT1ApKQoKICAgIGV4Y2VwdCBFeGNlcHRpb25hbEhhbHQgYXMgZXJyb3I6CiAgICAgICAgZXZtX3RyYWNlKGV2bSwgT3BFeGNlcHRpb24oZXJyb3IpKQogICAgICAgIGV2bS5nYXNfbGVmdCA9IFVpbnQoMCkKICAgICAgICBldm0ub3V0cHV0ID0gYiIiCiAgICAgICAgZXZtLmVycm9yID0gZXJyb3IKICAgIGV4Y2VwdCBSZXZlcnQgYXMgZXJyb3I6CiAgICAgICAgZXZtX3RyYWNlKGV2bSwgT3BFeGNlcHRpb24oZXJyb3IpKQogICAgICAgIGV2bS5lcnJvciA9IGVycm9yCiAgICByZXR1cm4gZXZtCpSFlIGUfZQoaAVoBmggah8SAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjFcvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9iZXJsaW4vdm0vaW50ZXJwcmV0ZXIucHmUjAl4bWw6c3BhY2WUanACAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqrwYAAEsBc4wHbGluZW5vc5SJdWgcapcGAABoHWgeaB9L5mggan0QAAB1YmVoDn2UKGgQXZRqHAIAAGFoE12UaBVdlIwMZXhlY3V0ZV9jb2RllGFoF12UaBldlHVoHGgzaB1oHmgfS9VoIGoiBgAAaCFoA3ViZWgOfZQoaBBdlGoxAQAAYWgTXZRoFV2UjA5tb2R1bGUgZGV0YWlsc5RhaBddlGgZXZR1aBxoM2gdaB5oH0s1aCBoNWghaAN1YmVoDn2UKGgQXZSMKGV0aGVyZXVtLXZpcnR1YWwtbWFjaGluZS1ldm0taW50ZXJwcmV0ZXKUYWgTXZRoFV2UjCpldGhlcmV1bSB2aXJ0dWFsIG1hY2hpbmUgKGV2bSkgaW50ZXJwcmV0ZXKUYWgXXZRoGV2UdWgcaDNoHWgeaB9LBGggaANoIWgDdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllGhEdWgcaAGMDmN1cnJlbnRfc291cmNllGhEjAxjdXJyZW50X2xpbmWUSwCMCHNldHRpbmdzlIwRZG9jdXRpbHMuZnJvbnRlbmSUjAZWYWx1ZXOUk5QpgZR9lCiMDHJlcG9ydF9sZXZlbJRLAowKaGFsdF9sZXZlbJRLBIwRZXhpdF9zdGF0dXNfbGV2ZWyUSwWMBWRlYnVnlE6MDndhcm5pbmdfc3RyZWFtlE6MCXRyYWNlYmFja5ROjA9vdXRwdXRfZW5jb2RpbmeUjAV1dGYtOJSMHW91dHB1dF9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwReG1sY2hhcnJlZnJlcGxhY2WUjA5lcnJvcl9lbmNvZGluZ5SMBXV0Zi04lIwcZXJyb3JfZW5jb2RpbmdfZXJyb3JfaGFuZGxlcpSMEGJhY2tzbGFzaHJlcGxhY2WUjBNyZWNvcmRfZGVwZW5kZW5jaWVzlIwOZG9jdXRpbHMudXRpbHOUjA5EZXBlbmRlbmN5TGlzdJSTlCmBlH2UKIwEbGlzdJRdlIwEZmlsZZROdWKMBmNvbmZpZ5ROjA1kdW1wX3NldHRpbmdzlE6MDmR1bXBfaW50ZXJuYWxzlE6MD2R1bXBfdHJhbnNmb3Jtc5ROjA9kdW1wX3BzZXVkb194bWyUTowQZXhwb3NlX2ludGVybmFsc5ROjA5zdHJpY3RfdmlzaXRvcpROjA9fZGlzYWJsZV9jb25maWeUTowHX3NvdXJjZZROjAxfZGVzdGluYXRpb26UjDVkb2MvZGlmZnMvYmVybGluX2xvbmRvbi92bS9pbnRlcnByZXRlci9pbmRleC5waWNrbGU2NJSMDV9jb25maWdfZmlsZXOUXZSMEWxpbmVfbGVuZ3RoX2xpbWl0lE0QJ4wJdGFiX3dpZHRolEsIjBBzeW50YXhfaGlnaGxpZ2h0lIwEbG9uZ5SMDHNtYXJ0X3F1b3Rlc5SJjBNzbWFydHF1b3Rlc19sb2NhbGVzlE6MHWNoYXJhY3Rlcl9sZXZlbF9pbmxpbmVfbWFya3VwlImMBndyaXRlcpSMA3htbJSMGWNvbXBhcmVfc2VjdGlvbnNfYnlfbmFtZXOUSwGMDGR1bXBfcnN0ZGlmZpROjAVfYm90aJR9lChoOE6MCWdlbmVyYXRvcpROjAlkYXRlc3RhbXCUTowLc291cmNlX2xpbmuUTowKc291cmNlX3VybJROjA10b2NfYmFja2xpbmtzlGrZAgAAjBJmb290bm90ZV9iYWNrbGlua3OUSwGMDXNlY3RudW1feGZvcm2USwGMDmRvY3RpdGxlX3hmb3JtlEsBjA1kb2NpbmZvX3hmb3JtlEsBjBJzZWN0c3VidGl0bGVfeGZvcm2USwCMDnN0cmlwX2NvbW1lbnRzlE6MDmlucHV0X2VuY29kaW5nlE6MHGlucHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjAZzdHJpY3SUjA1sYW5ndWFnZV9jb2RllIwCZW6UjA5wZXBfcmVmZXJlbmNlc5ROjAxwZXBfYmFzZV91cmyUjB9odHRwOi8vd3d3LnB5dGhvbi5vcmcvZGV2L3BlcHMvlIwVcGVwX2ZpbGVfdXJsX3RlbXBsYXRllIwIcGVwLSUwNGSUjA5yZmNfcmVmZXJlbmNlc5ROjAxyZmNfYmFzZV91cmyUjBtodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC+UjB10cmltX2Zvb3Rub3RlX3JlZmVyZW5jZV9zcGFjZZROjBZmaWxlX2luc2VydGlvbl9lbmFibGVklEsBjAtyYXdfZW5hYmxlZJRLAYwOYXV0b19pZF9wcmVmaXiUjAJpZJSMCWlkX3ByZWZpeJRoBowbc3RyaXBfZWxlbWVudHNfd2l0aF9jbGFzc2VzlE6MDXN0cmlwX2NsYXNzZXOUTnWMBGJvdGiUfZSMCl9vcHRpb25zVG+UjAVfYm90aJSMC19vbGRfc291cmNllIxPL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy8udG94L2RvY3Mvc3RhZ2UwX291dC9hdXRvYXBpL5SMC19uZXdfc291cmNllIwJZG9jL2RpZmZzlGqaEgAAapsSAACMFmlnbm9yZV9pbl9zZWN0aW9uX25hbWWUXZQojAZiZXJsaW6UjAZsb25kb26UZXVijAhyZXBvcnRlcpROjBBpbmRpcmVjdF90YXJnZXRzlF2UjBFzdWJzdGl0dXRpb25fZGVmc5R9lIwSc3Vic3RpdHV0aW9uX25hbWVzlH2UjAhyZWZuYW1lc5R9lIwGcmVmaWRzlH2UjAduYW1laWRzlH2UjAluYW1ldHlwZXOUfZRoEH2UjA1mb290bm90ZV9yZWZzlH2UjA1jaXRhdGlvbl9yZWZzlH2UjA1hdXRvZm9vdG5vdGVzlF2UjBFhdXRvZm9vdG5vdGVfcmVmc5RdlIwQc3ltYm9sX2Zvb3Rub3Rlc5RdlIwUc3ltYm9sX2Zvb3Rub3RlX3JlZnOUXZSMCWZvb3Rub3Rlc5RdlIwJY2l0YXRpb25zlF2UjBJhdXRvZm9vdG5vdGVfc3RhcnSUSwGMFXN5bWJvbF9mb290bm90ZV9zdGFydJRLAIwKaWRfY291bnRlcpSMC2NvbGxlY3Rpb25zlIwHQ291bnRlcpSTlH2UhZRSlIwOcGFyc2VfbWVzc2FnZXOUXZSMEnRyYW5zZm9ybV9tZXNzYWdlc5RdlIwLdHJhbnNmb3JtZXKUTowLaW5jbHVkZV9sb2eUXZSMCmRlY29yYXRpb26UTmghaAN1Yi4=